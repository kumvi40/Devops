=================================

vagrant init bento/centos-7.3
vagrant init bento/ubuntu-16.10

config.vm.define "chef_client" do |client|
      client.vm.hostname = "chef_client"
   end
  config.vm.define "client" do |client|
    client.vm.hostname = "client"
    config.vm.network "private_network", ip: "192.168.33.10"
  end
   
============================================
 
vagrant ssh-config => Output will be give ssh connection details
C:\Git-Hub\vagrant\centos\vm1>vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile C:/Git-Hub/vagrant/centos/vm1/.vagrant/machines/default/virtualbox/private_key
  IdentitiesOnly yes
  LogLevel FATAL
  
 Manually doing ssh like below ->
 ssh vagrant@127.0.0.1 -p 2222 -i /Users/lorinhochstein/dev/ansiblebook/ch01/
playbooks/.vagrant/machines/default/virtualbox/private_key 

============================================

Vagrant with 3 servers :

BOX_IMAGE = "bento/ubuntu-16.04"
NODE_COUNT = 2

Vagrant.configure("2") do |config|
  config.vm.define "master" do |subconfig|
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = "master"
    subconfig.vm.network :private_network, ip: "10.0.0.10"
  end
  
  (1..NODE_COUNT).each do |i|
    config.vm.define "node#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "node#{i}"
      subconfig.vm.network :private_network, ip: "10.0.0.#{i + 10}"
    end
  end

  # Install avahi on all machines  
  config.vm.provision "shell", inline: <<-SHELL
    apt-get install -y avahi-daemon libnss-mdns
  SHELL
end

===================================================================
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|  
# Use the same key for each machine  
  config.ssh.insert_key = false
  
  config.vm.define "vagrant1" do |vagrant1|    
	  vagrant1.vm.box = "ubuntu/trusty64"
	  vagrant1.vm.hostname = 'vagrant1'
	  vagrant1.vm.network :private_network, ip: "192.168.56.102"
	  vagrant1.vm.network "forwarded_port", guest: 80, host: 8080    
	  vagrant1.vm.network "forwarded_port", guest: 443, host: 8443
      vagrant1.vm.provision "shell", inline: <<-SHELL
	    apt-get install -y ansible
	  SHELL
  end
  
  config.vm.define "vagrant2" do |vagrant2|    
	  vagrant2.vm.box = "ubuntu/trusty64"
	  vagrant2.vm.hostname = 'vagrant2'
	  vagrant2.vm.network :private_network, ip: "192.168.56.103"
	  vagrant2.vm.network "forwarded_port", guest: 80, host: 8081    
	  vagrant2.vm.network "forwarded_port", guest: 443, host: 8444  
  end
  
  config.vm.define "vagrant3" do |vagrant3|    
	  vagrant3.vm.box = "ubuntu/trusty64"
	  vagrant3.vm.hostname = 'vagrant3'
	  vagrant3.vm.network :private_network, ip: "192.168.56.104"
	  vagrant3.vm.network "forwarded_port", guest: 80, host: 8082    
	  vagrant3.vm.network "forwarded_port", guest: 443, host: 8445  
  end
  
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update -y
	apt-get install -y git
  SHELL
end
